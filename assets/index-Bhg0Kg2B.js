(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const d of i.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&r(d)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class x{constructor(t,e,r){this.spriteMap=new Map,this.loaded=!1,this.image=new Image,this.image.src=e,Promise.all([fetch(t).then(s=>s.json()),new Promise(s=>{this.image.onload=()=>s()})]).then(([s])=>{if(s.meta&&s.meta.slices)for(const i of s.meta.slices){const d=i.name,o=i.keys[0].bounds;this.spriteMap.set(d,o)}this.loaded=!0,r&&r()})}isLoaded(){return this.loaded}drawSprite(t,e,r,s,i,d){const o=this.spriteMap.get(e);if(!o||!this.loaded)return;const l=Math.round(o.x),c=Math.round(o.y),p=Math.round(o.w),P=Math.round(o.h),m=Math.round(r),f=Math.round(s),g=Math.round(i),a=Math.round(d);t.drawImage(this.image,l,c,p,P,m,f,g,a)}}function y(u){switch(u){case"up":return[-1,0];case"down":return[1,0];case"left":return[0,-1];case"right":return[0,1]}return[0,0]}function v(u){switch(u){case"up":return"down";case"down":return"up";case"left":return"right";case"right":return"left"}}function S(u){switch(u){case"up":return"right";case"right":return"down";case"down":return"left";case"left":return"up"}}const R={up:"BeltN",down:"BeltS",left:"BeltW",right:"BeltE"};class n{constructor(t="up"){this.product=null,this.plannedProduct=null,this.slideProgress=1,this.slideSpeed=.02,this.prevProduct=null,this.direction=t}plan(t,e,r){if(this.product!=null||this.slideProgress<1){this.plannedProduct=null;return}const[s,i]=y(v(this.direction)),d=e+s,o=r+i,l=t.getTile(d,o);if(!l){this.plannedProduct=null;return}this.plannedProduct=l.pullProduct(this.direction,t,d,o)}apply(t,e,r){this.slideProgress<1?(this.slideProgress+=this.slideSpeed,this.slideProgress>1&&(this.slideProgress=1),this.slideProgress>=1&&this.prevProduct&&(this.product=this.prevProduct,this.prevProduct=null)):this.product==null&&this.plannedProduct&&(this.prevProduct=this.plannedProduct,this.slideProgress=0,this.plannedProduct=null)}render(t,e,r,s){const i=e.tileSize;this.prevProduct&&(t.save(),t.strokeStyle="#ffd600",t.lineWidth=4,t.globalAlpha=.6,t.strokeRect(s*i+2,r*i+2,i-4,i-4),t.restore());const d=R[this.direction];e.aseprite.drawSprite(t,d,s*i,r*i,i,i);let o=this.product,l=1;if(this.slideProgress<1&&this.prevProduct&&(o=this.prevProduct,l=this.slideProgress),o){const[c,p]=y(v(this.direction)),P=s+p,m=r+c;l+=.5;const f=P*(1-l)+s*l,g=m*(1-l)+r*l;o.renderProduct(t,e,f,g)}}pullProduct(t,e,r,s){if(t===this.direction&&this.product){const i=this.product;return this.product=null,i}return null}}class h{plan(t,e,r){}apply(t,e,r){}render(t,e,r,s){}pullProduct(t,e,r,s){return null}}const b={up:"LeftN",down:"LeftS",left:"LeftW",right:"LeftE"};class C{constructor(t="up"){this.product=null,this.plannedProduct=null,this.slideProgress=1,this.slideSpeed=.02,this.prevProduct=null,this.outputDir=t}inputDir(){return S(this.outputDir)}plan(t,e,r){if(this.product==null&&this.slideProgress>=1){const[s,i]=y(S(this.outputDir)),d=e-s,o=r-i,l=t.getTile(d,o);l?this.plannedProduct=l.pullProduct(S(this.outputDir),t,d,o):this.plannedProduct=null}else this.plannedProduct=null}apply(t,e,r){this.slideProgress<1?(this.slideProgress+=this.slideSpeed,this.slideProgress>1&&(this.slideProgress=1),this.slideProgress===1&&this.prevProduct&&(this.product=this.prevProduct,this.prevProduct=null)):this.product==null&&this.plannedProduct&&(this.prevProduct=this.plannedProduct,this.slideProgress=0,this.plannedProduct=null)}render(t,e,r,s){const i=e.tileSize,d=b[this.outputDir];e.aseprite.drawSprite(t,d,s*i,r*i,i,i);let o=this.product,l=1;if(this.slideProgress<1&&this.prevProduct&&(o=this.prevProduct,l=this.slideProgress),o){let[c,p]=y(S(this.outputDir)),[P,m]=y(this.outputDir),f,g;if(c*=.5,p*=.5,P*=.5,m*=.5,l<.5){const a=l/.5;f=(r-c)*(1-a)+r*a,g=(s-p)*(1-a)+s*a}else{const a=(l-.5)/.5;f=r*(1-a)+(r+P)*a,g=s*(1-a)+(s+m)*a}o.renderProduct(t,e,g,f)}}pullProduct(t,e,r,s){if(t===this.outputDir&&this.product){const i=this.product;return this.product=null,i}return null}}class w{constructor(t){this.pixels=t||w.defaultPixels()}static defaultPixels(){const t=["#ff9800","#f44336","#4caf50","#2196f3","#9c27b0","#ffeb3b","#00bcd4","#e91e63"];return Array.from({length:8},(e,r)=>Array.from({length:8},(s,i)=>t[(i+r)%t.length]))}renderProduct(t,e,r,s){const i=e.tileSize,d=i/2,o=d/8,l=(i-d)/2;for(let c=0;c<8;c++)for(let p=0;p<8;p++)t.fillStyle=this.pixels[c][p],t.fillRect(r*i+l+p*o,s*i+l+c*o,o,o)}}class T{constructor(t,e,r){this.highlightCell=null,this.gridSize=t,this.canvasSize=e,this.tileSize=e/t,this.aseprite=r,this.grid=[[new C("down"),new n("left"),new n("left"),new n("left"),new n("left"),new n("left"),new C("left")],[new n("down"),new n("right"),new h,new n("left"),new h,new h,new n("up")],[new n("down"),new h,new n("down"),new h,new h,new h,new n("up")],[new n("down"),new h,new h,new C("down"),new n("left"),new n("left"),new n("up")],[new n("down"),new h,new n("left"),new n("left"),new n("left"),new n("left"),new n("up")],[new n("down"),new h,new h,new h,new h,new h,new n("up")],[new C("right"),new n("right"),new n("up"),new n("right"),new n("right"),new n("right"),new C("up")]],this.grid[3][4].product=new w,this.grid[4][5].product=new w,this.grid[1][0].product=new w,this.grid[0][1].product=new w;const s=this.grid[6][3];s instanceof n&&(s.product=new w)}getTile(t,e){if(!(t<0||t>=this.grid.length)&&!(e<0||e>=this.grid[0].length))return this.grid[t][e]}setHighlightCell(t){this.highlightCell=t}update(){for(let t=0;t<this.gridSize;t++)for(let e=0;e<this.gridSize;e++)this.grid[t][e].plan(this,t,e);for(let t=0;t<this.gridSize;t++)for(let e=0;e<this.gridSize;e++)this.grid[t][e].apply(this,t,e)}renderTiles(t){for(let e=0;e<this.gridSize;e++)for(let r=0;r<this.gridSize;r++)this.grid[e][r].render(t,this,e,r);this.highlightCell&&(t.save(),t.fillStyle="rgba(255,255,0,0.3)",t.fillRect(this.highlightCell.x*this.tileSize,this.highlightCell.y*this.tileSize,this.tileSize,this.tileSize),t.restore())}renderProducts(t){}}class D{constructor(t,e,r){this.tileCanvas=t,this.tileCtx=this.tileCanvas.getContext("2d"),this.productCanvas=e,this.productCtx=this.productCanvas.getContext("2d"),this.factory=r,this.setupCanvas(),this.aseprite=r.aseprite,this.gameLoop()}gameLoop(){requestAnimationFrame(()=>this.gameLoop()),this.aseprite.isLoaded()&&(this.factory.update(),this.tileCtx.clearRect(0,0,this.tileCanvas.width,this.tileCanvas.height),this.productCtx.clearRect(0,0,this.productCanvas.width,this.productCanvas.height),this.factory.renderTiles(this.tileCtx),this.factory.renderProducts(this.productCtx))}getTileCtx(){return this.tileCtx}getProductCtx(){return this.productCtx}getPixelSize(){return 112}setupCanvas(){this.tileCtx.imageSmoothingEnabled=!1,this.productCtx.imageSmoothingEnabled=!1}}const z=document.getElementById("gameCanvas"),E=document.getElementById("productCanvas"),I=7,L=z.width,M=new T(I,L,new x("assets/sprites.json","assets/sprites.png"));new D(z,E,M);
