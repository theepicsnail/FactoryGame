(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();class S{constructor(t,i,s){this.spriteMap=new Map,this.loaded=!1,this.image=new Image,this.image.src=i,Promise.all([fetch(t).then(e=>e.json()),new Promise(e=>{this.image.onload=()=>e()})]).then(([e])=>{if(e.meta&&e.meta.slices)for(const r of e.meta.slices){const n=r.name,d=r.keys[0].bounds;this.spriteMap.set(n,d)}this.loaded=!0,s&&s()})}isLoaded(){return this.loaded}drawSprite(t,i,s,e,r,n){const d=this.spriteMap.get(i);if(!d||!this.loaded)return;const c=Math.round(d.x),u=Math.round(d.y),a=Math.round(d.w),f=Math.round(d.h),g=Math.round(s),h=Math.round(e),C=Math.round(r),y=Math.round(n);t.drawImage(this.image,c,u,a,f,g,h,C,y)}}const v={up:"BeltN",down:"BeltS",left:"BeltW",right:"BeltE"};class l{constructor(t="up"){this.product=null,this.plannedProduct=null,this.slideProgress=1,this.slideSpeed=.02,this.prevProduct=null,this.direction=t}plan(t,i,s){if(this.product==null&&this.slideProgress>=1){const[e,r]=l.directionDelta(this.oppositeDirection()),n=i+e,d=s+r,c=t.getTile(n,d);c?this.plannedProduct=c.pullProduct(this.direction,t,n,d):this.plannedProduct=null}else this.plannedProduct=null}apply(t,i,s){this.slideProgress<1?(this.slideProgress+=this.slideSpeed,this.slideProgress>1&&(this.slideProgress=1),this.slideProgress===1&&this.prevProduct&&(this.product=this.prevProduct,this.prevProduct=null)):this.product==null&&this.plannedProduct&&(this.prevProduct=this.plannedProduct,this.slideProgress=0,this.plannedProduct=null)}renderTile(t,i,s,e){const r=i.tileSize,n=v[this.direction];i.aseprite.drawSprite(t,n,e*r,s*r,r,r)}renderProduct(t,i,s,e){let r=this.product,n=1;if(this.slideProgress<1&&this.prevProduct&&(r=this.prevProduct,n=this.slideProgress),r){i.tileSize;const[d,c]=l.directionDelta(this.oppositeDirection()),u=e+c,a=s+d,f=u*(1-n)+e*n,g=a*(1-n)+s*n;r.renderProduct(t,i,f,g)}}pullProduct(t,i,s,e){if(t===this.direction&&this.product){const r=this.product;return this.product=null,r}return null}static directionDelta(t){switch(t){case"up":return[-1,0];case"down":return[1,0];case"left":return[0,-1];case"right":return[0,1]}}oppositeDirection(){switch(this.direction){case"up":return"down";case"down":return"up";case"left":return"right";case"right":return"left"}}}class o{plan(t,i,s){}apply(t,i,s){}renderTile(t,i,s,e){}renderProduct(t,i,s,e){}pullProduct(t,i,s,e){return null}}const x={up:"LeftN",down:"LeftS",left:"LeftW",right:"LeftE"};class p{constructor(t="up"){this.product=null,this.plannedProduct=null,this.slideProgress=1,this.slideSpeed=.01,this.prevProduct=null,this.outputDir=t}inputDir(){switch(this.outputDir){case"up":return"right";case"right":return"down";case"down":return"left";case"left":return"up"}}plan(t,i,s){if(this.product==null&&this.slideProgress>=1){const[e,r]=p.directionDelta(this.inputDir()),n=i-e,d=s-r,c=t.getTile(n,d);c?this.plannedProduct=c.pullProduct(this.inputDir(),t,n,d):this.plannedProduct=null}else this.plannedProduct=null}apply(t,i,s){this.slideProgress<1?(this.slideProgress+=this.slideSpeed,this.slideProgress>1&&(this.slideProgress=1),this.slideProgress===1&&this.prevProduct&&(this.product=this.prevProduct,this.prevProduct=null)):this.product==null&&this.plannedProduct&&(this.prevProduct=this.plannedProduct,this.slideProgress=0,this.plannedProduct=null)}renderTile(t,i,s,e){const r=i.tileSize,n=x[this.outputDir];i.aseprite.drawSprite(t,n,e*r,s*r,r,r)}renderProduct(t,i,s,e){let r=this.product,n=1;if(this.slideProgress<1&&this.prevProduct&&(r=this.prevProduct,n=this.slideProgress),r){i.tileSize;const[d,c]=p.directionDelta(this.inputDir()),[u,a]=p.directionDelta(this.outputDir);let f,g;if(n<.5){const h=n/.5;f=(s-d)*(1-h)+s*h,g=(e-c)*(1-h)+e*h}else{const h=(n-.5)/.5;f=s*(1-h)+(s+u)*h,g=e*(1-h)+(e+a)*h}r.renderProduct(t,i,g,f)}}pullProduct(t,i,s,e){if(t===this.outputDir&&this.product){const r=this.product;return this.product=null,r}return null}static directionDelta(t){switch(t){case"up":return[-1,0];case"down":return[1,0];case"left":return[0,-1];case"right":return[0,1]}}}class P{constructor(t){this.pixels=t||P.defaultPixels()}static defaultPixels(){const t=["#ff9800","#f44336","#4caf50","#2196f3","#9c27b0","#ffeb3b","#00bcd4","#e91e63"];return Array.from({length:8},(i,s)=>Array.from({length:8},(e,r)=>t[(r+s)%t.length]))}renderProduct(t,i,s,e){const r=i.tileSize,n=r/2,d=n/8,c=(r-n)/2;for(let u=0;u<8;u++)for(let a=0;a<8;a++)t.fillStyle=this.pixels[u][a],t.fillRect(s*r+c+a*d,e*r+c+u*d,d,d)}}class z{constructor(t,i,s){this.highlightCell=null,this.gridSize=t,this.canvasSize=i,this.tileSize=i/t,this.aseprite=s,this.grid=[[new p("down"),new l("left"),new l("left"),new l("left"),new l("left"),new l("left"),new p("left")],[new l("down"),new o,new o,new o,new o,new o,new l("up")],[new l("down"),new o,new o,new o,new o,new o,new l("up")],[new l("down"),new o,new o,new o,new o,new o,new l("up")],[new l("down"),new o,new o,new o,new o,new o,new l("up")],[new l("down"),new o,new o,new o,new o,new o,new l("up")],[new p("right"),new l("right"),new l("right"),new l("right"),new l("right"),new l("right"),new p("up")]];const e=this.grid[6][3];e instanceof l&&(e.product=new P)}getTile(t,i){if(!(t<0||t>=this.grid.length)&&!(i<0||i>=this.grid[0].length))return this.grid[t][i]}setHighlightCell(t){this.highlightCell=t}update(){for(let t=0;t<this.gridSize;t++)for(let i=0;i<this.gridSize;i++)this.grid[t][i].plan(this,t,i);for(let t=0;t<this.gridSize;t++)for(let i=0;i<this.gridSize;i++)this.grid[t][i].apply(this,t,i)}renderTiles(t){const i=t.getTileCtx();for(let s=0;s<this.gridSize;s++)for(let e=0;e<this.gridSize;e++)typeof this.grid[s][e].renderTile=="function"?this.grid[s][e].renderTile(i,this,s,e):this.grid[s][e].render(i,this,s,e);this.highlightCell&&(i.save(),i.fillStyle="rgba(255,255,0,0.3)",i.fillRect(this.highlightCell.x*this.tileSize,this.highlightCell.y*this.tileSize,this.tileSize,this.tileSize),i.restore())}renderProducts(t){const i=t.getProductCtx();for(let s=0;s<this.gridSize;s++)for(let e=0;e<this.gridSize;e++){const r=this.grid[s][e];typeof r.renderProduct=="function"&&r.renderProduct(i,this,s,e)}}}class D{constructor(t,i,s){this.tileCanvas=t,this.tileCtx=this.tileCanvas.getContext("2d"),this.productCanvas=i,this.productCtx=this.productCanvas.getContext("2d"),this.factory=s,this.setupCanvas(),this.aseprite=s.aseprite,this.gameLoop()}gameLoop(){requestAnimationFrame(()=>this.gameLoop()),this.aseprite.isLoaded()&&(this.factory.update(),this.tileCtx.clearRect(0,0,this.tileCanvas.width,this.tileCanvas.height),this.productCtx.clearRect(0,0,this.productCanvas.width,this.productCanvas.height),this.factory.renderTiles(this),this.factory.renderProducts(this))}getTileCtx(){return this.tileCtx}getProductCtx(){return this.productCtx}getPixelSize(){return 112}setupCanvas(){this.tileCtx.imageSmoothingEnabled=!1,this.productCtx.imageSmoothingEnabled=!1,this.tileCanvas.addEventListener("mousemove",t=>{}),this.tileCanvas.addEventListener("mouseleave",()=>{})}}const m=document.getElementById("gameCanvas"),E=document.getElementById("productCanvas"),R=7,b=m.width,I=new z(R,b,new S("src/assets/sprites.json","src/assets/sprites.png"));new D(m,E,I);
