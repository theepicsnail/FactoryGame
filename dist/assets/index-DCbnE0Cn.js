(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const h of i.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&r(h)}).observe(document,{childList:!0,subtree:!0});function l(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(t){if(t.ep)return;t.ep=!0;const i=l(t);fetch(t.href,i)}})();class c{constructor(e,l,r){this.spriteMap=new Map,this.loaded=!1,this.image=new Image,this.image.src=l,Promise.all([fetch(e).then(t=>t.json()),new Promise(t=>{this.image.onload=()=>t()})]).then(([t])=>{if(t.meta&&t.meta.slices)for(const i of t.meta.slices){const h=i.name,a=i.keys[0].bounds;this.spriteMap.set(h,a)}this.loaded=!0,r&&r()})}isLoaded(){return this.loaded}drawSprite(e,l,r,t,i,h){const a=this.spriteMap.get(l);!a||!this.loaded||e.drawImage(this.image,a.x,a.y,a.w,a.h,r,t,i,h)}}class d{constructor(e,l,r){this.highlightCell=null,this.gridSize=e,this.canvasSize=l,this.tileSize=l/e,this.aseprite=r,this.grid=[["Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["EnterW","Empty","Empty","BG","Empty","Empty","ExitE"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty"]]}setHighlightCell(e){this.highlightCell=e}drawGrid(e){this.aseprite.drawSprite(e,"BG",0,0,this.canvasSize,this.canvasSize)}drawHighlight(e){this.highlightCell&&(e.save(),e.fillStyle="rgba(255,255,0,0.3)",e.fillRect(this.highlightCell.x*this.tileSize,this.highlightCell.y*this.tileSize,this.tileSize,this.tileSize),e.restore())}drawSprites(e){for(let l=0;l<this.gridSize;l++)for(let r=0;r<this.gridSize;r++){const t=this.grid[l][r];t&&this.aseprite.drawSprite(e,t,r*this.tileSize,l*this.tileSize,this.tileSize,this.tileSize)}}render(e){this.drawGrid(e),this.drawSprites(e),this.drawHighlight(e)}}const n=document.getElementById("gameCanvas"),m=n.getContext("2d");m.imageSmoothingEnabled=!1;n.addEventListener("mousemove",o=>{if(!s)return;const e=n.getBoundingClientRect(),l=o.clientX-e.left,r=o.clientY-e.top,t=Math.floor(l/s.tileSize),i=Math.floor(r/s.tileSize);t>=0&&t<s.gridSize&&i>=0&&i<s.gridSize?s.setHighlightCell({x:t,y:i}):s.setHighlightCell(null)});n.addEventListener("mouseleave",()=>{s&&s.setHighlightCell(null)});n.addEventListener("mousemove",o=>{if(!s)return;const e=n.getBoundingClientRect(),l=o.clientX-e.left,r=o.clientY-e.top,t=Math.floor(l/s.tileSize),i=Math.floor(r/s.tileSize);t>=0&&t<s.gridSize&&i>=0&&i<s.gridSize?s.setHighlightCell({x:t,y:i}):s.setHighlightCell(null)});n.addEventListener("mouseleave",()=>{s&&s.setHighlightCell(null)});const y=7,g=n.width;let s=null;const E=new c("src/assets/sprites.json","src/assets/sprites.png",()=>{s=new d(y,g,E),requestAnimationFrame(p)});function p(){m.clearRect(0,0,n.width,n.height),s&&s.render(m),requestAnimationFrame(p)}
